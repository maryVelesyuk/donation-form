{"version":3,"sources":["Form.js","App.js","index.js"],"names":["CustomForm","initialValues","name","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","className","htmlFor","id","type","component","as","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAiEeA,EA9DI,WACjB,OACE,cAAC,IAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,OAAQ,EACRC,SAAU,GACVC,KAAM,GACNC,OAAO,GAETC,iBAAkBC,IAAW,CAC3BP,KAAMO,MACHC,IAAI,EAAG,0MACPC,SAAS,qGACZR,MAAOM,MACJN,MAAM,iHACNQ,SAAS,qGACZP,OAAQK,MACLC,IAAI,EAAG,mHACPC,SAAS,qGACZN,SAAUI,MAAaE,SAAS,yFAChCL,KAAMG,MACNF,MAAOE,MACJE,SAAS,iHACTC,MAAM,EAAC,GAAO,mHAEnBC,SAAU,SAACC,GAAD,OAAYC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAQ,KAAM,KAzBjE,SA2BE,eAAC,IAAD,CAAMK,UAAU,OAAhB,UACE,uKACA,uBAAOC,QAAQ,OAAf,yDACA,cAAC,IAAD,CAAOC,GAAG,OAAOnB,KAAK,OAAOoB,KAAK,SAClC,cAAC,IAAD,CAAcpB,KAAK,OAAOiB,UAAU,QAAQI,UAAU,QACtD,uBAAOH,QAAQ,QAAf,qEACA,cAAC,IAAD,CAAOC,GAAG,QAAQnB,KAAK,QAAQoB,KAAK,UACpC,cAAC,IAAD,CAAcpB,KAAK,QAAQiB,UAAU,QAAQI,UAAU,QACvD,uBAAOH,QAAQ,SAAf,0EACA,cAAC,IAAD,CAAOC,GAAG,SAASnB,KAAK,SAASoB,KAAK,WACtC,cAAC,IAAD,CAAcpB,KAAK,SAASiB,UAAU,QAAQI,UAAU,QACxD,uBAAOH,QAAQ,WAAf,kDACA,eAAC,IAAD,CAAOC,GAAG,WAAWnB,KAAK,WAAWsB,GAAG,SAAxC,UACE,wBAAQC,MAAM,GAAd,mGACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,oBAEF,cAAC,IAAD,CAAcvB,KAAK,WAAWiB,UAAU,QAAQI,UAAU,QAC1D,uBAAOH,QAAQ,OAAf,6FACA,cAAC,IAAD,CAAOC,GAAG,OAAOnB,KAAK,OAAOsB,GAAG,aAChC,cAAC,IAAD,CAActB,KAAK,OAAOiB,UAAU,QAAQI,UAAU,QACtD,wBAAOJ,UAAU,WAAjB,UACE,cAAC,IAAD,CAAOjB,KAAK,QAAQoB,KAAK,aAD3B,0PAIA,cAAC,IAAD,CAAcpB,KAAK,QAAQiB,UAAU,QAAQI,UAAU,QACvD,wBAAQD,KAAK,SAAb,0EChDOI,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCFNQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7697f02b.chunk.js","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst CustomForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        amount: 0,\n        currency: \"\",\n        text: \"\",\n        terms: false,\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .min(2, \"Имя должно содержать минимум 2 символа\")\n          .required(\"Обязательное поле\"),\n        email: Yup.string()\n          .email(\"Введите корректный email\")\n          .required(\"Обязательное поле\"),\n        amount: Yup.number()\n          .min(5, \"Минимальный перевод 5\")\n          .required(\"Обязательное поле\"),\n        currency: Yup.string().required(\"Выберите валюту\"),\n        text: Yup.string(),\n        terms: Yup.boolean()\n          .required(\"Необходимо согласие\")\n          .oneOf([true], \"Необходимо согласие\"),\n      })}\n      onSubmit={(values) => console.log(JSON.stringify(values, null, 2))}\n    >\n      <Form className=\"form\">\n        <h2>Отправить пожертвование</h2>\n        <label htmlFor=\"name\">Ваше имя</label>\n        <Field id=\"name\" name=\"name\" type=\"text\" />\n        <ErrorMessage name=\"name\" className=\"error\" component=\"div\" />\n        <label htmlFor=\"email\">Ваша почта</label>\n        <Field id=\"email\" name=\"email\" type=\"email\" />\n        <ErrorMessage name=\"email\" className=\"error\" component=\"div\" />\n        <label htmlFor=\"amount\">Количество</label>\n        <Field id=\"amount\" name=\"amount\" type=\"number\" />\n        <ErrorMessage name=\"amount\" className=\"error\" component=\"div\" />\n        <label htmlFor=\"currency\">Валюта</label>\n        <Field id=\"currency\" name=\"currency\" as=\"select\">\n          <option value=\"\">Выберите валюту</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"UAH\">UAH</option>\n          <option value=\"RUB\">RUB</option>\n        </Field>\n        <ErrorMessage name=\"currency\" className=\"error\" component=\"div\" />\n        <label htmlFor=\"text\">Ваше сообщение</label>\n        <Field id=\"text\" name=\"text\" as=\"textarea\" />\n        <ErrorMessage name=\"text\" className=\"error\" component=\"div\" />\n        <label className=\"checkbox\">\n          <Field name=\"terms\" type=\"checkbox\" />\n          Соглашаетесь с политикой конфиденциальности?\n        </label>\n        <ErrorMessage name=\"terms\" className=\"error\" component=\"div\" />\n        <button type=\"submit\">Отправить</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default CustomForm;\n","import \"./app.scss\";\nimport CustomForm from \"./Form\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <CustomForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}